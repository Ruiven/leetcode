package main;

import java.util.ArrayList;
import java.util.List;

public class WordDictionary {

	TrieNode root;
	
	
	public WordDictionary() {
		root = new TrieNode();
	}
	
	
	// Adds a word into the data structure.
    public void addWord(String word) {
    	
    	TrieNode t = root;
		for(int i = 0 ; i < word.length(); i++ ) {
			if(t.childrenList[word.charAt(i)-'a'] == null) {
				t.childrenList[word.charAt(i)-'a'] = new TrieNode();;
			}
			t = t.childrenList[word.charAt(i)-'a'];
		}
		t.isLeaf = true;
        
    }

    // Returns if the word is in the data structure. A word could
    // contain the dot character '.' to represent any one letter.
    public boolean search(String word) {
    	
    	List<TrieNode> list = new ArrayList<TrieNode>();
    	
    	TrieNode t = root;
		for(int i = 0 ; i < word.length(); i++ ) {
			if(t.childrenList[word.charAt(i)-'a'] == null) {
				return false;
			}
			t = t.childrenList[word.charAt(i)-'a'];
		}
		
		if(!t.isLeaf)
			return false;
		
		return true;
        
    }
}
