package main;

import java.util.Stack;

class TreeNode {
	int val;
	TreeNode left;
	TreeNode right;
	TreeNode(int x) { val = x; }
}

public class Solution {
	public boolean isBalanced(TreeNode root) {
        if(root == null)
        	return true;
        
		int min = 0, max = 0;
		boolean found = false;
		Stack<TreeNode> stack = new Stack<>();
		Stack<Integer> depthStack = new Stack<>();
        stack.push(root);
        depthStack.push(1);
        while(!stack.isEmpty()) {
        	TreeNode p = stack.pop();
        	int depth = depthStack.pop();
        	
        	if(p != null) {
        		stack.push(p.left);
        		stack.push(p.right);
        		depthStack.push(depth+1);
        		depthStack.push(depth+1);
        	}
        	
        	else{
        		if(depth-1 > max)
        			max = depth-1;
        		if(depth-1 < min)
        			min = depth-1;
        	}
        }
    }
}
