package main;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	public List<List<String>> findLadders(String beginWord, String endWord, Set<String> wordDict) {
		List<List<String>> res = new ArrayList<>();
		List<String> part = new ArrayList<>();
		part.add(beginWord);
		
		Set<String> visited = new HashSet<>();
				
		backtrack(beginWord, endWord, wordDict, visited, part, res);
		
		return res;
		
    }
	
	void backtrack(String tempWord, String endWord, Set<String> wordDict, Set<String> visited, List<String> part, List<List<String>> res) {
		if(tempWord.equals(endWord)) {
			part.add(endWord);
			res.add(new ArrayList<String>(part));
			return;
		}
		
		for(int i = 0; i < tempWord.length(); i++) {
			char[] tempCharArr = tempWord.toCharArray();
			for(char c = 'a'; c <= 'z' ; c++ ) {
				if(c == tempCharArr[i])
					continue;
				tempCharArr[i] = c;
				String changed = new String(tempCharArr);
				if(changed.equals(endWord)) {
					part.add(endWord);
					res.add(new ArrayList<String>(part));
					
				}
				
			}
		}
		
	}
}
