package main;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	public static List<List<Integer>> threeSum(int[] nums) {
		if(nums.length < 3)
			return new ArrayList<List<Integer>();
		
		List<Integer> list = new ArrayList<Integer>();
        for(int i : nums) {
        	list.add(i);
        }        
        Collections.sort(list);
        Set<List<Integer>> solList = new HashSet<List<Integer>>();
        List<Integer> sol = new ArrayList<>();
        
        for(int i = 0 ; i < list.size(); i++) {
        
        	int target = -list.get(i);
	        int lowP = 0, highP = list.size()-1;
	        
	        while(lowP <= highP) {
	        	if(lowP == i)
	        		lowP++;
	        	if(highP == i)
	        		highP--;
	        	if(list.get(lowP) + list.get(highP) < target) {
	        		lowP++;
	        		
	        		continue;
	        	}
	        	
	        	if(list.get(lowP) + list.get(highP) > target) {
	        		highP--;
	        		continue;
	        	}
	        	
	        	break;	        	
	        }
	        
	        if(list.get(lowP) + list.get(highP) == target && lowP != highP) {
	        	sol.add(list.get(i));
	        	sol.add(list.get(lowP));
	        	sol.add(list.get(highP));
	        	Collections.sort(sol);
	        	solList.add(sol);
	        	sol = new ArrayList<>();
	        }
	        	
	        
        }
        return new ArrayList<List<Integer>>(solList);
    }
	
	public static void main(String[] args) {
		int nums[] = {0};
		System.out.println(threeSum(nums));
	}
}
