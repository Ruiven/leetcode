package main;

public class Solution {
	public boolean exist(char[][] board, String word) {
        
		
		return false;
    }
	
	
	
	public boolean backtrack(String word, String part, char[][] board, int[] pos ) {
		if(part.equals(word))
			return true;
		
		//up
		if(pos[0] != 0 && word.charAt(part.length()) == board[pos[0]-1][pos[1]]) {
			part = part + board[pos[0]-1][pos[1]];
			pos[0]--;
		}
		
		//down
		if(pos[0] != board.length-1 && word.charAt(part.length()) == board[pos[0]+1][pos[1]]) {
			part = part + board[pos[0]+1][pos[1]];
			pos[0]++;
		}
		
		//left
		if(pos[1] != 0 && word.charAt(part.length()) == board[pos[0]][pos[1]-1]) {
			part = part + board[pos[0]][pos[1]-1];
			pos[1]--;
		}
		
		//right
		if(pos[1] != board[0].length-1 && word.charAt(part.length()) == board[pos[0]][pos[1]+1]) {
			part = part + board[pos[0]][pos[1]+1];
			pos[1]++;
		}
		
		
		return false;
	}

	
	public static void main(String[] args) {
		int board[][] = {{1,2,3},{1,2,3}, {1,2,3}};
		System.out.println(board.length);
	}
}
