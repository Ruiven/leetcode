package main;

import java.util.ArrayList;
import java.util.List;

public class Solution {
	public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> solutionList = new ArrayList<>();
		if(nums.length == 0)
			return solutionList;
        
        
        permute(nums, new ArrayList<Integer>(), new Boolean[nums.length], solutionList);
        return solutionList;
    }
	
	
	public void permute(int[] nums, ArrayList<Integer> part, Boolean[] used, List<List<Integer>> solutionList) {
		if(nums.length == part.size()) {
			solutionList.add(new ArrayList<>(part));
			return;
		}
		
		for(int i = 0 ; i < nums.length; i++) {
			if(!used[i]) {
				part.add(nums[i]);
				used[i] = true;
				permute(nums, part, used, solutionList);
				part.remove(part.size()-1);
				used[i] = false;
				
			}
		}
	}
}
