package main;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Stack;

class UndirectedGraphNode {
	int label;
	List<UndirectedGraphNode> neighbors;
	UndirectedGraphNode(int x) { label = x; neighbors = new ArrayList<UndirectedGraphNode>(); }
};


public class Solution {
	public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) {
		if(node == null)
			return null;
		
		HashMap<UndirectedGraphNode, Boolean> visited = new HashMap<>();
		Stack<UndirectedGraphNode> stack1 = new Stack<>();
		Stack<UndirectedGraphNode> stack2 = new Stack<>();
		
		stack1.push(node);
		visited.put(node, true);
		
		while(!stack1.isEmpty()) {
			UndirectedGraphNode temp = stack1.pop();
			
			for(UndirectedGraphNode nei : temp.neighbors) {
				if(!visited.containsKey(nei)) {
					stack1.push(nei);
					visited.put(nei, true);
				}
			}
		}
		
    }
}
