package main;

import java.util.ArrayList;
import java.util.List;

public class Solution {
	
	public List<Integer> part;
	public boolean[][] contradict;
	public List<List<Integer>> solutions;
	
	public List<List<String>> solveNQueens(int n) {
		part = new ArrayList<Integer>();
		contradict = new boolean[n][n];
		solutions = new ArrayList<List<Integer>>();
		return null;
	}

	
	
	
	public void backtrack(int row, int n) {
		if(row == n) {
			solutions.add(new ArrayList<Integer>(part));
			return;
		}
		
		for(int i = 0 ; i < n; i++) {
			if(contradict[row][i])
				continue;
			part.add(i);
			for(int k = 0; k < n; k++)
				contradict[row][k] = true;;
			for(int k = 0; k < n; k ++)
				contradict[k][i] = true;
			
			if(i+row < n)
				for(int k = 0; k <= i+row; k++)
					contradict[k][i+row-k] = true;
			else
				for(int k = 0; k <= 2*n-1-i-row; k++)
					contradict[k][i+row-k] = true;
			
			
			backtrack(row+1, n);
			part.remove(part.size()-1);
		}
		
	}
}
