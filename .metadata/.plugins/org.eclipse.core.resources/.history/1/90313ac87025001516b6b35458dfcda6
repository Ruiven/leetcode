package main;


import java.util.Arrays;


public class Solution {
	public int getMiddle(int[] list, int low, int high) {    
        int tmp =list[low];    //数组的第一个作为中轴    
        while (low < high){    
            while (low < high&& list[high] >= tmp) {    
               high--;    
            }    

            list[low] =list[high];   //比中轴小的记录移到低端    
            while (low < high&& list[low] <= tmp) {    
                low++;    
            }    

            list[high] =list[low];   //比中轴大的记录移到高端    
        }    
       list[low] = tmp;              //中轴记录到尾    
        return low;                   //返回中轴的位置    
}   

public void _quickSort(int[] list, int low, int high) {    
        if (low < high){    
           int middle =getMiddle(list, low, high);  //将list数组进行一分为二    
           _quickSort(list, low, middle - 1);       //对低字表进行递归排序    
           _quickSort(list,middle + 1, high);       //对高字表进行递归排序    
        }    
}  

public void quick(int[] a2) {    
        if (a2.length > 0) {    //查看数组是否为空    
            _quickSort(a2,0, a2.length - 1);    
        }    
} 
	
	public static int canCompleteCircuit(int[] gas, int[] cost) {
		
		boolean found = true;
		
		int index[] = new int[gas.length];
		int copy[] = new int[gas.length];
		for(int i = 0 ; i < gas.length; i++ ) {
			index[i] = i;
			copy[i] = gas[i];
		}
		
		for(int i=1;i<copy.length;i++){  
		       int j=i-1;  
		       int temp=copy[i]; 
		       int tempI = index[i];
		       for(;j>=0&&temp<copy[j];j--){  
		           copy[j+1]=copy[j];  //将大于temp的值整体后移一个单位  
		           index[j+1] = index[j];
		       }  
		       copy[j+1]=temp;  
		       index[j+1] = tempI;
	    }  
		
		
		for(int i = index.length-1; i >=0 ; i--) {	//try every possible solution		
			int remaining = 0;
			found = true;
			for(int j = 0; j < gas.length; j++ ) {	//simulated running
				remaining += gas[(index[i]+j) % gas.length];
				remaining -= cost[(index[i]+j) % gas.length];
				if(remaining < 0) {
					found = false;
					break;
				}
			}
			if(found) {
				return index[i];
			}
		}
		
		return -1;
        
    }
	
	public static void main(String[] args) {
		int gas[] = {5};
		int cost[] = {4};
		System.out.println(canCompleteCircuit(gas, cost));
	}
}
